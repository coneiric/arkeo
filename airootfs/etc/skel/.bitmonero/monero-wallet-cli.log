2018-02-15 03:24:24.292	    7feb187f5780	INFO 	logging	contrib/epee/src/mlog.cpp:148	New log categories: *:WARNING,net:FATAL,net.p2p:FATAL,net.cn:FATAL,global:INFO,verify:FATAL,stacktrace:INFO,logging:INFO,msgwriter:INFO
2018-02-15 03:24:24.292	    7feb187f5780	INFO 	msgwriter	src/common/scoped_message_writer.h:102	Monero 'Helium Hydra' (v0.11.1.0-release)

2018-02-15 03:24:24.292	    7feb187f5780	INFO 	msgwriter	src/common/scoped_message_writer.h:102	This is the command line monero wallet. It needs to connect to a monero
daemon to work correctly.

2018-02-15 03:24:24.292	    7feb187f5780	INFO 	msgwriter	src/common/scoped_message_writer.h:102	Usage:
  monero-wallet-cli [--wallet-file=<file>|--generate-new-wallet=<file>] [<COMMAND>]
2018-02-15 03:24:24.292	    7feb187f5780	INFO 	msgwriter	src/common/scoped_message_writer.h:102	
General options:
  --help                              Produce help message
  --version                           Output version information

Wallet options:
  --daemon-address arg                Use daemon instance at <host>:<port>
  --daemon-host arg                   Use daemon instance at host <arg> instead
                                      of localhost
  --password arg                      Wallet password (escape/quote as needed)
  --password-file arg                 Wallet password file
  --daemon-port arg (=0)              Use daemon instance at port <arg> instead
                                      of 18081
  --daemon-login arg                  Specify username[:password] for daemon 
                                      RPC client
  --testnet                           For testnet. Daemon must also be launched
                                      with --testnet flag
  --restricted-rpc                    Restricts to view-only commands
  --wallet-file arg                   Use wallet <arg>
  --generate-new-wallet arg           Generate new wallet and save it to <arg>
  --generate-from-view-key arg        Generate incoming-only wallet from view 
                                      key
  --generate-from-keys arg            Generate wallet from private keys
  --generate-from-multisig-keys arg   Generate a master wallet from multisig 
                                      wallet keys
  --generate-from-json arg            Generate wallet from JSON format file
  --mnemonic-language arg             Language for mnemonic
  --command arg
  --restore-deterministic-wallet      Recover wallet using Electrum-style 
                                      mnemonic seed
  --non-deterministic                 Create non-deterministic view and spend 
                                      keys
  --electrum-seed arg                 Specify Electrum seed for wallet 
                                      recovery/creation
  --trusted-daemon                    Enable commands which rely on a trusted 
                                      daemon
  --allow-mismatched-daemon-version   Allow communicating with a daemon that 
                                      uses a different RPC version
  --restore-height arg (=0)           Restore from specific blockchain height
  --log-file arg                      Specify log file
  --log-level arg                     0-4 or categories
  --max-concurrency arg (=0)          Max number of threads to use for a 
                                      parallel job
  --config-file arg                   Config file

